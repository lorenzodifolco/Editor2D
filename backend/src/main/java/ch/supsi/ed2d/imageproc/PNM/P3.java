package ch.supsi.ed2d.imageproc.PNM;

import ch.supsi.ed2d.imageproc.InvalidImageException;
import ch.supsi.ed2d.imageproc.model.Pixel;
import ch.supsi.ed2d.imageproc.model.Image;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class P3 extends PNMInterpreter {

    private static P3 singleton;

    public static P3 getInstance()
    {
        if(singleton == null)
            singleton = new P3();
        return singleton;
    }
    @Override
    public void save(Image img, String path) throws IOException {
        File f = new File(path);
        if(f.createNewFile())
        {
            try(var bw = new BufferedWriter(new FileWriter(f)))
            {
                StringBuilder sb = new StringBuilder();
                sb.append("P3\n")
                        .append("#Generated by supsi.ed2d\n")
                        .append(img.getWidth())
                        .append(" ")
                        .append(img.getHeight())
                        .append("\n")
                        .append("255\n");

                for(Pixel pixel : img)
                {
                    sb.append(pixel.getR())
                            .append("\n")
                            .append(pixel.getG())
                            .append("\n")
                            .append(pixel.getB())
                            .append("\n");
                }
                bw.write(sb.toString());
            }
        }
        else throw new IOException("File already exist");

    }

    private P3() {
        setType(PNMTypes.P3);
    }

    protected Image loadBody(Scanner sc, PNMHeader header) throws InvalidImageException {
        Image img = new Image(header.getWidth(),header.getHeight());
        img.apply((x,y)->{
            int firstChannel = 0,secondChannel = 0,thirdChannel = 0;
            if(sc.hasNextInt())
                firstChannel = sc.nextInt();
            if(sc.hasNextInt())
                secondChannel = sc.nextInt();
            if(sc.hasNextInt())
                thirdChannel = sc.nextInt();

            img.setPixel(Pixel.triplets(firstChannel,secondChannel,thirdChannel, header.getColorDepth()),x,y);
        });
        sc.close();
        return img;
    }
}

